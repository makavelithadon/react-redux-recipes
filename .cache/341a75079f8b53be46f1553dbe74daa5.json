{"dependencies":[{"name":"babel-runtime/helpers/extends","loc":{"line":1,"column":21}},{"name":"lodash/map","loc":{"line":2,"column":17}},{"name":"classnames","loc":{"line":3,"column":15}},{"name":"prop-types","loc":{"line":5,"column":22}},{"name":"react","loc":{"line":6,"column":18}},{"name":"../../lib","loc":{"line":8,"column":117}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require(\"babel-runtime/helpers/extends\");\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _map2 = require(\"lodash/map\");\n\nvar _map3 = _interopRequireDefault(_map2);\n\nvar _classnames = require(\"classnames\");\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require(\"../../lib\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A feed can contain an extra content.\n */\nfunction FeedExtra(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      images = props.images,\n      text = props.text;\n\n  var classes = (0, _classnames2.default)((0, _lib.useKeyOnly)(images, 'images'), (0, _lib.useKeyOnly)(content || text, 'text'), 'extra', className);\n  var rest = (0, _lib.getUnhandledProps)(FeedExtra, props);\n  var ElementType = (0, _lib.getElementType)(FeedExtra, props);\n\n  if (!_lib.childrenUtils.isNil(children)) {\n    return _react2.default.createElement(ElementType, (0, _extends3.default)({}, rest, { className: classes }), children);\n  }\n\n  // TODO need a \"collection factory\" to handle creating multiple image elements and their keys\n  var imageElements = (0, _map3.default)(images, function (image, index) {\n    var key = [index, image].join('-');\n    return (0, _lib.createHTMLImage)(image, { key: key });\n  });\n\n  return _react2.default.createElement(ElementType, (0, _extends3.default)({}, rest, { className: classes }), content, imageElements);\n}\n\nFeedExtra.handledProps = ['as', 'children', 'className', 'content', 'images', 'text'];\nFeedExtra._meta = {\n  name: 'FeedExtra',\n  parent: 'Feed',\n  type: _lib.META.TYPES.VIEW\n};\n\nFeedExtra.propTypes = \"development\" !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Shorthand for primary content. */\n  content: _lib.customPropTypes.contentShorthand,\n\n  /** An event can contain additional information like a set of images. */\n  images: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['text']), _propTypes2.default.oneOfType([_propTypes2.default.bool, _lib.customPropTypes.collectionShorthand])]),\n\n  /** An event can contain additional text information. */\n  text: _propTypes2.default.bool\n} : {};\n\nexports.default = FeedExtra;"},"hash":"8e1f48cd39e7dfa7951746b2e5aa0953"}