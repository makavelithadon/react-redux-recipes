{"dependencies":[{"name":"babel-runtime/helpers/classCallCheck","loc":{"line":1,"column":28}},{"name":"babel-runtime/helpers/createClass","loc":{"line":2,"column":25}},{"name":"babel-runtime/helpers/possibleConstructorReturn","loc":{"line":3,"column":39}},{"name":"babel-runtime/helpers/inherits","loc":{"line":4,"column":22}},{"name":"prop-types","loc":{"line":5,"column":22}},{"name":"react","loc":{"line":6,"column":36}},{"name":"react-dom","loc":{"line":7,"column":28}},{"name":"../../lib/META","loc":{"line":9,"column":22}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require(\"babel-runtime/helpers/createClass\");\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require(\"react\");\n\nvar _reactDom = require(\"react-dom\");\n\nvar _META = require(\"../../lib/META\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * This component exposes a callback prop that always returns the DOM node of both functional and class component\n * children.\n */\n\nvar Ref = function (_Component) {\n  (0, _inherits3.default)(Ref, _Component);\n\n  function Ref() {\n    (0, _classCallCheck3.default)(this, Ref);\n\n    return (0, _possibleConstructorReturn3.default)(this, (Ref.__proto__ || Object.getPrototypeOf(Ref)).apply(this, arguments));\n  }\n\n  (0, _createClass3.default)(Ref, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var innerRef = this.props.innerRef;\n\n      // Heads up! Don't move this condition, it's a short circuit that avoids run of `findDOMNode`\n      // if `innerRef` isn't passed\n      // eslint-disable-next-line react/no-find-dom-node\n\n      if (innerRef) innerRef((0, _reactDom.findDOMNode)(this));\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var children = this.props.children;\n\n      return _react.Children.only(children);\n    }\n  }]);\n\n  return Ref;\n}(_react.Component);\n\nRef._meta = {\n  name: 'Ref',\n  type: _META.TYPES.ADDON\n};\nRef.handledProps = ['children', 'innerRef'];\nexports.default = Ref;\n\nRef.propTypes = \"development\" !== \"production\" ? {\n  /** Primary content. */\n  children: _propTypes2.default.element,\n\n  /**\n   * Called when componentDidMount.\n   *\n   * @param {HTMLElement} node - Referred node.\n   */\n  innerRef: _propTypes2.default.func\n} : {};"},"hash":"4b2602650f81d24dd3e70f9617a3ea75"}