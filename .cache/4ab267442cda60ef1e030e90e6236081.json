{"dependencies":[{"name":"babel-runtime/helpers/extends","loc":{"line":1,"column":21}},{"name":"classnames","loc":{"line":2,"column":15}},{"name":"prop-types","loc":{"line":3,"column":22}},{"name":"react","loc":{"line":4,"column":18}},{"name":"../../lib","loc":{"line":6,"column":112}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = PopupContent;\n\nvar _extends2 = require(\"babel-runtime/helpers/extends\");\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classnames = require(\"classnames\");\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require(\"../../lib\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A PopupContent displays the content body of a Popover.\n */\nfunction PopupContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n\n  var classes = (0, _classnames2.default)('content', className);\n  var rest = (0, _lib.getUnhandledProps)(PopupContent, props);\n  var ElementType = (0, _lib.getElementType)(PopupContent, props);\n\n  return _react2.default.createElement(ElementType, (0, _extends3.default)({}, rest, { className: classes }), _lib.childrenUtils.isNil(children) ? content : children);\n}\n\nPopupContent.handledProps = ['as', 'children', 'className', 'content'];\nPopupContent.propTypes = \"development\" !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** The content of the Popup */\n  children: _propTypes2.default.node,\n\n  /** Classes to add to the Popup content className. */\n  className: _propTypes2.default.string,\n\n  /** Shorthand for primary content. */\n  content: _lib.customPropTypes.contentShorthand\n} : {};\n\nPopupContent._meta = {\n  name: 'PopupContent',\n  type: _lib.META.TYPES.MODULE,\n  parent: 'Popup'\n};\n\nPopupContent.create = (0, _lib.createShorthandFactory)(PopupContent, function (children) {\n  return { children: children };\n});"},"hash":"6f3b70f2d08af6a6a058329c5669f0ae"}